tosca_definitions_version: tosca_simple_yaml_1_0

metadata:
  template_name: indigo-types
  template_version: 1.0.0
  template_author: indigo

imports:
  - tosca-normative-types: https://raw.githubusercontent.com/grycap/tosca/indigo/normative-types.yml


description: The INDIGO Custom types

data_types:

  tosca.datatypes.Root:
    description: >
      The TOSCA root Data Type all other TOSCA base Data Types derive from

  tosca.datatypes.network.PortDef:
    derived_from: tosca.datatypes.Root
    type: integer
    constraints:
      - in_range: [ 1, 65535 ]

  tosca.datatypes.network.PortSpec:
    derived_from: tosca.datatypes.Root
    properties:
      protocol:
        type: string
        required: true
        default: tcp
        constraints:
          - valid_values: [ udp, tcp, igmp ]
      target:
        type: tosca.datatypes.network.PortDef
        required: false
      target_range:
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]
      source:
        type: tosca.datatypes.network.PortDef
        required: false
      source_range:
        type: range
        required: false
        constraints:
          - in_range: [ 1, 65535 ]

artifact_types:

  tosca.artifacts.Implementation.YAML:
    derived_from: tosca.artifacts.Implementation
    description: YAML Ansible recipe artifact
    mime_type: text/yaml
    file_ext: [ yaml, yml ]

  tosca.artifacts.AnsibleGalaxy.role:
    derived_from: tosca.artifacts.Root
    description: Ansible Galaxy role to be deployed in the target node

capability_types:

  tosca.capabilities.indigo.OperatingSystem:
    derived_from: tosca.capabilities.OperatingSystem
    properties:
      gpu:
        type: boolean
        required: no
      image:
        type: string
        required: no
      credential:
        type: tosca.datatypes.Credential
        required: no

  tosca.capabilities.indigo.Scalable:
    derived_from: tosca.capabilities.Scalable
    properties:
      min_instances:
        type: integer
        default: 1
        required: no
      max_instances:
        type: integer
        default: 1
        required: no
      count:
        type: integer
        description: the number of resources
        required: no
        default: 1
      removal_list:
        type: list
        description: list of IDs of the resources to be removed
        required: no
        entry_schema:
          type: string

  tosca.capabilities.indigo.Container:
    derived_from: tosca.capabilities.Container
    properties:
      instance_type:
        type: string
        required: no

  tosca.capabilities.indigo.LRMS:
    derived_from: tosca.capabilities.Container
    properties:
      type:
        type: string
        required: true
        constraints:
        - valid_values: [ local, torque, slurm, sge, condor, mesos ]

  tosca.capabilities.indigo.LRMS.Local:
    derived_from: tosca.capabilities.indigo.LRMS
    properties:
      type:
        type: string
        required: true
        default: local
        constraints:
          - equal: local

  tosca.capabilities.Container.Docker:
    derived_from: tosca.capabilities.Container
    properties:
      version:
        type: list
        required: false
        entry_schema:
          type: version
        description: >
          The Docker version capability.
      publish_all:
        type: boolean
        default: false
        required: false
        description: >
          Indicates that all ports (ranges) listed in the dockerfile
          using the EXPOSE keyword be published.
      publish_ports:
        type: list
        entry_schema:
          type: tosca.datatypes.network.PortSpec
        required: false
        description: >
          List of ports mappings from source (Docker container)
          to target (host) ports to publish.
      expose_ports:
        type: list
        entry_schema:
          type: tosca.datatypes.network.PortSpec
        required: false
        description: >
          List of ports mappings from source (Docker container) to expose
          to other Docker containers (not accessible outside host).
      volumes:
        type: list
        entry_schema:
          type: string
        required: false
        description: >
          The dockerfile VOLUME command which is used to enable access
          from the Docker container to a directory on the host machine.
      host_id:
        type: string
        required: false
        description: >
            The optional identifier of an existing host resource
            that should be used to run this container on.
      volume_id:
        type: string
        required: false
        description: >
          The optional identifier of an existing storage volume (resource)
          that should be used to create the container's mount point(s) on.

  tosca.capabilities.indigo.Container.Docker:
    derived_from: tosca.capabilities.Container.Docker
    properties:
      num_cpus:
        type: float
        required: false
        constraints:
          - greater_or_equal: 0.0

  tosca.capabilities.indigo.Endpoint:
    derived_from: tosca.capabilities.Endpoint
    properties:
      dns_name:
        description: The optional name to register with DNS
        type: string
        required: false
      private_ip:
        description: Flag used to specify that this endpoint will require also a private IP although it is a public one.
        type: boolean
        required: false
        default: true
    attributes:
      credential:
        type: list
        entry_schema:
          type: tosca.datatypes.Credential

  tosca.capabilities.indigo.Container.Application.Docker.Chronos:
    derived_from: tosca.capabilities.Root

relationship_types:

  tosca.relationships.indigo.Manages:
    derived_from: tosca.relationships.Root

node_types:

  tosca.nodes.indigo.Compute:
    derived_from: tosca.nodes.Compute
    description: >
      The INDIGO Compute node
    metadata:
      icon: /images/compute.png
    attributes:
      private_address:
        description: List of private IP addresses
        type: list
        entry_schema:
          type: string
      public_address:
        description: List of public IP addresses
        type: list
        entry_schema:
          type: string
      ctxt_log:
        description: Contextualization log
        type: string
    capabilities:
      scalable:
        type: tosca.capabilities.indigo.Scalable
      os:
         type: tosca.capabilities.indigo.OperatingSystem
      endpoint:
        type: tosca.capabilities.indigo.Endpoint
      host:
        type: tosca.capabilities.indigo.Container
        valid_source_types: [tosca.nodes.SoftwareComponent]

  tosca.nodes.indigo.OneDataStorage:
    derived_from: tosca.nodes.BlockStorage
    metadata:
      icon: /images/onedata.png
    properties:
      size:
        # to overwrite BlockStorage size property to set it as not required
        type: scalar-unit.size
        required: false
      oneprovider_host:
        type: list
        entry_schema:
          type: string
        required: false
      onezone_endpoint:
        type: string
        required: false
      dataspace:
        type: list
        entry_schema:
          type: string
        required: false
      credential:
        type: tosca.datatypes.Credential
        required: true

  tosca.nodes.indigo.ElasticCluster:
    derived_from: tosca.nodes.SoftwareComponent
    metadata:
      icon: /images/ec3.png
    properties:
      secret_token:
        type: string
        description: Token to access CLUES web interface
        default: not_very_secret_token
        required: false
      deployment_id:
        type: string
        description: ID of the deployment of this elastic cluster in the orchestrator
        required: false
      orchestrator_url:
        type: string
        description: URL of the orchestrator
        required: false
        default: http://orchestrator01-indigo.cloud.ba.infn.it:8080/orchestrator
      iam_access_token:
        type: string
        description: INDIGO IAM access token
        required: false
        default: iam_access_token
      iam_clues_client_id:
        type: string
        description: INDIGO IAM client id to be used by CLUES
        required: false
        default: iam_clues_client_id
      iam_clues_client_secret:
        type: string
        description: INDIGO IAM client secret to be used by CLUES
        required: false
        default: iam_clues_client_secret
      marathon_credentials:
        type: tosca.datatypes.Credential
        description: Credentials to access the marathon endpoint from CLUES plugin
        default:
          protocol: http
          user: admin
          token: password
        required: false
      chronos_credentials:
        type: tosca.datatypes.Credential
        description: Credentials to access the chronos endpoint from CLUES plugin
        default:
          protocol: http
          user: admin
          token: password
        required: false
      mesos_credentials:
        type: tosca.datatypes.Credential
        description: Credentials to access the mesos endpoint from CLUES plugin
        default:
          protocol: http
          user: admin
          token: password
        required: false
      hybrid:
        type: boolean
        description: Flag to specify that this ElasticCluster will work in a hybrid environment
        default: false
        required: false
    artifacts:
      - docker_agent_role:
          file: indigo-dc.clues
          type: tosca.artifacts.AnsibleGalaxy.role
    interfaces:
      Standard:
        create:
          implementation: https://raw.githubusercontent.com/indigo-dc/tosca-types/master/artifacts/ec3/ec3_install.yml
          inputs:
            clues_secret_token: { get_property: [ SELF, secret_token ] }
            clues_queue_system: { get_property: [ SELF, lrms, type ] }
            ec3_max_instances: { get_property: [ SELF, wn, max_instances] }
            ec3_deployment_id: { get_property: [ SELF, deployment_id] }
            orchestrator_url: { get_property: [ SELF, orchestrator_url] }
            ec3_iam_access_token: { get_property: [ SELF, iam_access_token] }
            ec3_iam_clues_client_id: { get_property: [ SELF, iam_clues_client_id] }
            ec3_iam_clues_client_secret: { get_property: [ SELF, iam_clues_client_secret] }
            clues_marathon_credentials: { get_property: [ SELF, marathon_credentials] }
            clues_chronos_credentials: { get_property: [ SELF, chronos_credentials] }
            clues_mesos_credentials: { get_property: [ SELF, mesos_credentials] }
    requirements:
      - wn:
          capability: tosca.capabilities.Scalable
          node: tosca.nodes.indigo.LRMS.WorkerNode
          relationship: tosca.relationships.indigo.Manages
      - lrms:
          capability: tosca.capabilities.indigo.LRMS
          node: tosca.nodes.indigo.LRMS.FrontEnd
          relationship: tosca.relationships.HostedOn

  tosca.nodes.indigo.LRMS.WorkerNode:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      front_end_ip:
        type: string
        description: IP of the Front-End node
        required: true
      hybrid:
        type: boolean
        description: Flag to specify that this WorkerNode will work in a hybrid environment
        default: false
        required: false
      public_front_end_ip:
        type: string
        description: Public IP of the Front-End node
        required: false
        default: ''
    capabilities:
        wn:
          type: tosca.capabilities.Scalable
          valid_source_types: [tosca.nodes.indigo.ElasticCluster]
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn

  tosca.nodes.indigo.LRMS.FrontEnd:
    derived_from: tosca.nodes.SoftwareComponent
    properties:
      wn_ips:
        type: list
        entry_schema:
          type: string
        description: List of IPs of the WNs
        required: false
        default: []
      hybrid:
        type: boolean
        description: Flag to specify that this FrontEnd will work in a hybrid environment
        default: false
        required: false
    capabilities:
        lrms:
          type: tosca.capabilities.indigo.LRMS
    requirements:
      - host:
          capability: tosca.capabilities.Container
          node: tosca.nodes.Compute
          relationship: tosca.relationships.HostedOn

  tosca.nodes.indigo.LRMS.FrontEnd.Local:
    derived_from: tosca.nodes.indigo.LRMS.FrontEnd
    capabilities:
        lrms:
          type: tosca.capabilities.indigo.LRMS.Local
