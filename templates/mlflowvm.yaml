tosca_definitions_version: tosca_simple_yaml_1_0

imports:
  - grycap_custom_types: https://raw.githubusercontent.com/grycap/tosca/main/custom_types.yaml

metadata:
  version: "0.2.0"
  name: MLFlow
  display_name: Deploy MLFlow on a VM
  icon: images/mlflow.png
  parents:
    - simple-node-disk.yml
  tag: beta

description: Deploy MLFlow on a VM. Optionally an S3 (or MinIO) bucket can be used to store the MLFlow artifacts.

topology_template:

  inputs:

    mlflow_admin_user:
      type: string
      description: MLFlow Admin server Username
      default: admin
      required: yes

    mlflow_admin_password:
      type: string
      description: MLFlow Admin server Password
      default: password
      required: yes

    mlflow_dns_hostname:
      type: string
      description: MLFlow DNS hostname
      default: ''
      required: no

    mlflow_cert_email:
      type: string
      description: MLFlow LetsEncrypt certificate email
      default: 'johndoe@server.com'
      required: no

    mlflow_nsupdate_secret:
      default: ''
      description: Secret generated when registering DNS name via https://nsupdate.fedcloud.eu/
      type: string
      required: no

    mlflow_s3_endpoint:
      type: string
      description: MLFlow S3 endpoint (in case of MinIO server)
      default: ''
      required: no

    mlflow_s3_ak:
      type: string
      description: MLFlow S3 Access Key
      default: ''
      required: no

    mlflow_s3_sk:
      type: string
      description: MLFlow S3 Secret Key
      default: ''
      required: no

    mlflow_s3_bucket:
      type: string
      description: MLFlow S3 Bucket
      default: 'mlflow'
      required: no

  node_templates:

    mlflow:
      type: tosca.nodes.ec3.Application
      artifacts:
        community_crypto:
          file: community.crypto
          type: tosca.artifacts.AnsibleGalaxy.collection
        docker_role:
          file: grycap.docker
          type: tosca.artifacts.AnsibleGalaxy.role
      capabilities:
        endpoint:
          properties:
            ports:
              https:
                protocol: tcp
                source: 443
              http:
                protocol: tcp
                source: 80
      interfaces:
        Standard:
          configure:
            implementation:  https://raw.githubusercontent.com/grycap/tosca/main/artifacts/mlflow_compose.yml
            inputs:
              mlflow_admin_user:
                get_input: mlflow_admin_user
              mlflow_admin_password:
                get_input: mlflow_admin_password
              mlflow_dns_hostname:
                get_input: mlflow_dns_hostname
              mlflow_cert_email:
                get_input: mlflow_cert_email
              mlflow_s3_endpoint:
                get_input: mlflow_s3_endpoint
              mlflow_s3_ak:
                get_input: mlflow_s3_ak
              mlflow_s3_sk:
                get_input: mlflow_s3_sk
              mlflow_s3_bucket:
                get_input: mlflow_s3_bucket
      requirements:
        - host: simple_node
        - dependency: nsupdate_mlflow

    nsupdate_mlflow:
      type: tosca.nodes.ec3.Application
      interfaces:
        Standard:
          configure:
            implementation: https://raw.githubusercontent.com/grycap/tosca/main/artifacts/dydns_egi_update.yml
            inputs:
              dydns_hostname:
                get_input: mlflow_dns_hostname
              dydns_secret:
                get_input: mlflow_nsupdate_secret
              new_ip:
                get_attribute: [ simple_node, public_address, 0 ]
      requirements:
        - host: simple_node


  outputs:
    mlflow_endpoint:
      value: { concat: [ 'https://', get_attribute: [ simple_node, public_address, 0 ], '/' ] }
    mlflow_dns_endpoint:
      value: { concat: [ 'https://', get_input: mlflow_dns_hostname, '/' ] }
