---
- hosts: localhost
  connection: local
  vars:
    version: "{{ ades_version | default('master') }}"
    namespace: "{{ ades_namespace | default('eoepca') }}"
    public_ip_address: "{{ IM_NODE_PUBLIC_IP | default(ansible_default_ipv4.address) }}"
    rabbitmq_username: "{{ ades_rabbitmq_username | default('rabbitmq_username') }}"
    rabbitmq_password: "{{ ades_rabbitmq_password | default('rabbitmq_password') }}"
    minio_accesskey: "{{ ades_minio_accesskey | default('minio_accesskey') }}"
    minio_secretkey: "{{ ades_minio_secretkey | default('minio_secretkey') }}"
  tasks:
    - name: Create MinIO Helm values file
      copy:
        dest: /tmp/minio_config.yaml
        mode: '644'
        content: |
          rootUser: "{{ minio_accesskey }}"
          rootPassword: "{{ minio_secretkey }}"
          replicas: 2
          ingress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/proxy-body-size: "0"
              nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
            path: /
            hosts:
              - minio.{{ public_ip_address }}.nip.io
            tls:
              - secretName: minio-tls
                hosts:
                  - minio.{{ public_ip_address }}.nip.io
          consoleIngress:
            enabled: true
            ingressClassName: nginx
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/proxy-body-size: "0"
              nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
            path: /
            hosts:
              - console.minio.{{ public_ip_address }}.nip.io
            tls:
            - secretName: minio-console-tls
              hosts:
                - console.minio.{{ public_ip_address }}.nip.io
          resources:
            requests:
              memory: 1Gi
          persistence:
            storageClass: ""
          buckets:
            - name: eoepca
            - name: cache-bucket

    - name: Install minio Helm repository
      command: helm repo add minio https://charts.min.io/
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
      register: helm_repo_minio
      changed_when: "'already exists' not in helm_repo_minio.stdout"

    - name: Install (or upgrade) the MinIO chart
      command: helm upgrade --install minio minio/minio --namespace minio --create-namespace --values /tmp/minio_config.yaml --timeout 10m
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"

    - name: Install eoepca Helm repository
      command: helm repo add eoepca https://eoepca.github.io/helm-charts/
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
      register: helm_repo_eoepca
      changed_when: "'already exists' not in helm_repo_eoepca.stdout"

    - name: Create ZOO-Project DRU Helm values file
      copy:
        dest: /tmp/ades-values.yaml
        mode: '644'
        content: |
          ingress:
            enabled: true
            className: nginx
            hosts:
            - host: zoo-open.{{ public_ip_address }}.nip.io
              paths:
              - path: /
                pathType: ImplementationSpecific
            tls:
              - secretName: zoo-open-tls
                hosts:
                  - zoo-open.{{ public_ip_address }}.nip.io
          global:
            postgresql:
              auth:
                username: zoo
                password: zoo
                database: zoo
          rabbitmq:
            auth:
              username: {{ rabbitmq_username }}
              password: {{ rabbitmq_password }}
          persistence:
            storageClass: ""
            procServicesStorageClass: ""
            tmpStorageClass: ""
          workflow:
            storageClass: ""

    - name: Install (or upgrade) the ZOO-Project DRU chart
      command: helm install --version 0.2.6 --values /tmp/ades-values.yaml --repo https://zoo-project.github.io/charts/ zoo-project-dru zoo-project-dru
      environment:
        KUBECONFIG: "/etc/kubernetes/admin.conf"
