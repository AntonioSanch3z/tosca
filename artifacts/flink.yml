---
- hosts: localhost
  connection: local
  vars:
    version: "{{ flink_version | default('1.18.0') }}"
    cluster_name: "{{ flink_cluster_name | default('flink-cluster') }}"
    namespace: "{{ flink_namespace | default('flink') }}"
  tasks:

  - name: Download flink
    get_url:
      url: https://dlcdn.apache.org/flink/flink-{{ version }}/flink-{{ version }}-bin-scala_2.12.tgz
      dest: /opt/flink-{{ version }}-bin-scala_2.12.tgz
  
  - name: Extract flink
    unarchive:
      src: /opt/flink-{{ version }}-bin-scala_2.12.tgz
      dest: /opt/
      remote_src: yes
      creates: /opt/flink-{{ version }}

  - name: Create flink K8s resources file
    copy:
      dest: /opt/flink.yaml
      content: |
        ---
        kind: Namespace
        apiVersion: v1
        metadata:
          name: {{ namespace }}
          labels:
            name: {{ namespace }}
        ---
        apiVersion: rbac.authorization.k8s.io/v1
        kind: ClusterRoleBinding
        metadata:
          name: flink-role-binding-default
        roleRef:
          apiGroup: rbac.authorization.k8s.io
          kind: ClusterRole
          name: edit
        subjects:
        - kind: ServiceAccount
          name: default
          namespace: {{ namespace }}
        ---
        apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
          namespace: {{ namespace }}
          name: flink-ingress
          annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /$1
        spec:
          ingressClassName: nginx
          rules:
          - http:
              paths:
              - path: /flink/?(.*)
                backend:
                  service:
                      name: {{ cluster_name }}-rest
                      port:
                        number: 8081
                pathType: Prefix

  - name: Create Flink K8s resources
    command: kubectl apply -f /opt/flink.yaml
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    register: flink_resources
    changed_when: "'created' in flink_resources.stdout or 'configured' in flink_resources.stdout"

  - name: Get Flink cluster
    command: kubectl get deployment {{ cluster_name }} -n {{ namespace }}
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    register: flink_cluster
    changed_when: false
    ignore_errors: true

  - name: Create Flink cluster
    command: ./bin/kubernetes-session.sh -Dkubernetes.cluster-id={{ cluster_name }} -Dkubernetes.namespace={{ namespace }}
    args:
      chdir: /opt/flink-{{ version }}
    environment:
      KUBECONFIG: /etc/kubernetes/admin.conf
    when: flink_cluster.rc != 0